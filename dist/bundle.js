(()=>{"use strict";const e=function(){function e(){this._isDragging=!1,this._heldDirections=[],this._keyMap={ArrowUp:"up",ArrowDown:"down",ArrowLeft:"left",ArrowRight:"right"}}return Object.defineProperty(e.prototype,"direction",{get:function(){return this._heldDirections[0]},enumerable:!1,configurable:!0}),e.prototype.init=function(){var e=this,t=document.getElementById("joystick"),i=document.getElementById("inner-circle");document.addEventListener("keydown",(function(t){var i=e._keyMap[t.key];i&&-1===e._heldDirections.indexOf(i)&&e._heldDirections.unshift(i)})),document.addEventListener("keyup",(function(t){var i=e._keyMap[t.key],n=e._heldDirections.indexOf(i);n>-1&&e._heldDirections.splice(n,1)})),t.addEventListener("touchstart",(function(t){e._isDragging=!0,n(t),t.preventDefault()}),{passive:!1}),document.addEventListener("touchend",(function(){e._heldDirections.pop(),e._isDragging=!1;var n=t.getBoundingClientRect(),a=n.width/2,o=n.height/2;i.style.left="".concat(a,"px"),i.style.top="".concat(o,"px")})),document.addEventListener("touchmove",(function(t){e._isDragging&&n(t)}));var n=function(n){var a=n.touches[0].clientX,o=n.touches[0].clientY,s=t.getBoundingClientRect(),r=s.left+s.width/2,h=s.top+s.height/2,c=a-r,d=o-h,p=Math.atan2(d,c),g=Math.min(Math.hypot(c,d),s.width/2),m=r+g*Math.cos(p),l=h+g*Math.sin(p);i.style.left="".concat(m-s.left,"px"),i.style.top="".concat(l-s.top,"px");var w={x:c>=0?Math.min(c,s.width/2):Math.max(c,-s.width/2),y:d>=0?Math.min(d,s.height/2):Math.max(d,-s.height/2)};if(Math.abs(w.x)<s.width/8&&Math.abs(w.y)<s.height/8)return e._heldDirections.pop();var u=Math.abs(w.x)>Math.abs(w.y)?"x":"y",y=w[u]>0?"x"===u?"right":"down":"x"===u?"left":"up";-1===e._heldDirections.indexOf(y)&&(e._heldDirections.pop(),e._heldDirections.unshift(y))}},e}();var t=function(e){return 16*e},i=function(e,t){return"".concat(16*e,",").concat(16*t)},n=function(e,t,i){var n=e,a=t;return"right"===i?n+=16:"left"===i?n-=16:"up"===i?a-=16:"down"===i&&(a+=16),{x:n,y:a}},a=function(e){for(var t=e[e.coord];t<e[e.coord]+e.n;t++)"x"===e.coord?e.map.walls[i(t,e.y)]=!0:"y"===e.coord&&(e.map.walls[i(e.x,t)]=!0)};const o=function(){function e(e){this.keyPressFunction=function(t){" "===t.key&&e()},this.touchFunction=function(){document.getElementById("button-a").style.backgroundColor="rgb(125, 174, 191)",e()},this.touchEndFunction=function(){document.getElementById("button-a").style.backgroundColor="lightblue"},document.addEventListener("keypress",this.keyPressFunction),document.getElementById("button-a").addEventListener("touchstart",this.touchFunction,{passive:!1}),document.getElementById("button-a").addEventListener("touchend",this.touchEndFunction)}return e.prototype.unbind=function(){document.removeEventListener("keypress",this.keyPressFunction),document.getElementById("button-a").removeEventListener("touchstart",this.touchFunction),document.getElementById("button-a").removeEventListener("touchend",this.touchEndFunction)},e}();var s=function(){function e(e){this.element=e.element,this.text=e.text,this.speed=e.speed||20,this.timeout=null,this.isDone=!1}return e.prototype.revealCharacter=function(e){var t=this,i=e.shift();i.span.classList.add("revealed"),e.length>0?this.timeout=setTimeout((function(){t.revealCharacter(e)}),i.delayAfter):this.isDone=!0},e.prototype.warpToDone=function(){clearTimeout(this.timeout),this.isDone=!0,this.element.querySelectorAll("span").forEach((function(e){e.classList.add("revealed")}))},e.prototype.init=function(){var e=this,t=[];this.text.split("").forEach((function(i){var n=document.createElement("span");n.textContent=i,e.element.appendChild(n),t.push({span:n,delayAfter:""===i?0:e.speed})})),this.revealCharacter(t)},e}(),r=function(){function e(e){var t=e.text,i=e.onComplete,n=e.showNote,a=e.isLink;this._text=this._decodeText(t),this._onComplete=i,this.element=null,this._showNote=n,this._isLink=a}return e.prototype.createElement=function(){var e=this,t=this._isLink?'<a href="'.concat(this._text,'" target="_blank">').concat(this._text,"</a>"):"";this.element=document.createElement("div"),this.element.classList.add("message"),this.element.innerHTML='\n            <p class="message-p">'.concat(t,"</p>\n            ").concat(this._showNote?'<p class="note">Press \''.concat(window.isMobile?"A":"spacebar","' to continue</p>"):"",'\n            <button class="message-button">X</button>\n        '),this._isLink||(this.typewriter=new s({element:this.element.querySelector(".message-p"),text:this._text})),this.element.querySelector(".message-button").addEventListener("click",(function(){e.done()})),this.interactionListener=new o((function(){e.done()}))},e.prototype._decodeText=function(e){return"string"==typeof e?e:e(window.isMobile)},e.prototype.done=function(){this._isLink||this.typewriter.isDone?(this.element.remove(),this.interactionListener.unbind(),this._onComplete()):this.typewriter.warpToDone()},e.prototype.init=function(e){this.createElement(),e.appendChild(this.element),!this._isLink&&this.typewriter.init()},e}(),h=function(){function e(e){var t=e.title,i=e.textLines,n=e.onComplete;this._title=t,this._textLines=i,this._onComplete=n,this.element=null}return e.prototype.createElement=function(){var e=this;this.element=document.createElement("div"),this.element.classList.add("interaction-box");var t=this._textLines.map((function(e){return'<p class="interaction-box-text">'.concat(e,"</p>")})).join("");this.element.innerHTML='\n            <p class="interaction-box-title"> '.concat(this._title,' </p>\n            <div class="interaction-box-container">\n                ').concat(t,'\n            </div>\n            <button class="message-button">X</button>\n        '),this.element.querySelector(".message-button").addEventListener("click",(function(){e.done()})),this.spacebarListener=new o((function(){e.spacebarListener.unbind(),e.done()}))},e.prototype.done=function(){this.element.remove(),this._onComplete()},e.prototype.init=function(e){this.createElement(),e.appendChild(this.element)},e}(),c=function(){function e(){this.element=null}return e.prototype.createElement=function(){this.element=document.createElement("div"),this.element.classList.add("scene-transition")},e.prototype.fadeOut=function(){var e=this;this.element.classList.add("fade-out"),this.element.addEventListener("animationend",(function(){e.element.remove()}),{once:!0})},e.prototype.init=function(e,t){this.createElement(),e.appendChild(this.element),this.element.addEventListener("animationend",(function(){t()}),{once:!0})},e}(),d=function(){function e(e){var t=e.map,i=e.event;this.map=t,this.event=i}return e.prototype.idle=function(e){var t=this;this.map.gameObjects[this.event.who].startBehavior({map:this.map},{type:"idle",direction:this.event.direction,time:this.event.time});var i=function(n){n.detail.whoId===t.event.who&&(document.removeEventListener("CharacterIdleComplete",i),e())};document.addEventListener("CharacterIdleComplete",i)},e.prototype.walk=function(e){var t=this;this.map.gameObjects[this.event.who].startBehavior({map:this.map},{type:"walk",direction:this.event.direction,retry:!0});var i=function(n){n.detail.whoId===t.event.who&&(document.removeEventListener("CharacterWalkComplete",i),e())};document.addEventListener("CharacterWalkComplete",i)},e.prototype.show=function(e){var t=this;this.map.gameObjects[this.event.who].startBehavior({map:this.map},{type:"show",direction:this.event.direction});var i=function(n){n.detail.whoId===t.event.who&&(document.removeEventListener("CharacterShowCompleted",i),e())};document.addEventListener("CharacterShowCompleted",i)},e.prototype.message=function(e){var t=this;this.map.isInteracting=!0,new r({showNote:this.event.showNote,isLink:this.event.isLink,text:this.event.text,onComplete:function(){t.map.isInteracting=!1,e()}}).init(document.querySelector(".game-container"))},e.prototype.interactionBox=function(e){var t=this;this.map.isInteracting=!0,new h({title:this.event.title,textLines:this.event.textLines,onComplete:function(){t.map.isInteracting=!1,e()}}).init(document.querySelector(".game-container"))},e.prototype.changeMap=function(e){var t=this,i=new c;i.init(document.querySelector(".game-container"),(function(){t.map.engine.startMap(t.event.map),e(),i.fadeOut()}))},e.prototype.changeCameraView=function(e){var t=this.map.gameObjects[this.event.who];this.map.engine.setCameraView(t),e()},e.prototype.init=function(){var e=this;return new Promise((function(t){e[e.event.type](t)}))},e}();const p=d;var g=function(){return g=Object.assign||function(e){for(var t,i=1,n=arguments.length;i<n;i++)for(var a in t=arguments[i])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e},g.apply(this,arguments)},m=function(){function e(e){var t=this;this.isImageLoaded=!1,this._lowerImage=new Image,this._upperImage=new Image,this._lowerImage.src=e.lowerImageSrc,this._upperImage.src=e.upperImageSrc||"",this._lowerImage.onload=function(){t.isImageLoaded=!0;var e=new CustomEvent("mapImageLoaded");document.dispatchEvent(e)},this._walls=e.walls,this.gameObjects=e.gameObjects,this.engine=null,this.actionSpaces=e.actionSpaces,this.spacesTaken=this.getSpacesTaken(),this.isInteracting=!1,this.initialInteractions=e.initialInteractions,this.keepInitialInteractions=e.keepInitialInteractions,this.limits=e.limits}return e.prototype.isSpaceTaken=function(e,t,i){var a=n(e,t,i),o=a.x,s=a.y;return this.spacesTaken["".concat(o,",").concat(s)]&&!this.actionSpaces["".concat(o,",").concat(s)]},e.prototype.mountObjects=function(){var e=this;Object.keys(this.gameObjects).forEach((function(t){var i=e.gameObjects[t];i.id=t,i.mount(e)})),this.doors=this.getDoors()},e.prototype.getInteractionOnSquare=function(e,t){return this.interactablePlaces["".concat(e,",").concat(t)]},e.prototype.drawLowerImage=function(e,i){e.drawImage(this._lowerImage,t(window.canvasMultiplier.x)-i.getXView(),t(window.canvasMultiplier.y)-i.getYView())},e.prototype.drawUpperImage=function(e,i){this._upperImage&&e.drawImage(this._upperImage,t(window.canvasMultiplier.x)-i.getXView(),t(window.canvasMultiplier.y)-i.getYView())},e.prototype.getSpacesTaken=function(){var e={};return Object.values(this.gameObjects).forEach((function(t){for(var n=t.x,a=t.y,o=t.objectHeight,s=t.objectWidth,r=n+t.collisionOffset.width,h=r+s,c=a+t.collisionOffset.height,d=c+o,p=r/16;p<h/16;p++)for(var g=c/16;g<d/16;g++)e[i(p,g)]=!0})),g(g({},e),this._walls)},e.prototype.addSpaceTaken=function(e,t){this.spacesTaken["".concat(e,",").concat(t)]=!0},e.prototype.removeSpaceTaken=function(e,t){delete this.spacesTaken["".concat(e,",").concat(t)]},e.prototype.moveSpaceTaken=function(e,t,i){this.removeSpaceTaken(e,t);var a=n(e,t,i),o=a.x,s=a.y;this.addSpaceTaken(o,s)},e.prototype.getDoors=function(){var e={};return Object.values(this.gameObjects).forEach((function(t){if(t.door)for(var n=16*Math.floor(t.door.offsetX/16)+t.x,a=16*Math.floor(t.door.offsetY/16)+t.y,o=n+t.door.width,s=a+t.door.height-16,r=n/16;r<o/16;r++)e[i(r,s/16)]=t.id,e[i(r,s/16-1)]=t.id,e[i(r,s/16+1)]=t.id})),g({},e)},e.prototype.checkActionForPosition=function(){if(this.actionSpaces){var e=this.actionSpaces["".concat(this.gameObjects.miniMe.x,",").concat(this.gameObjects.miniMe.y)];!this.isInteracting&&e&&this.startInteraction(e[0].events)}},e.prototype.tryInteraction=function(){var e=this.checkForInteraction();e&&(this.isInteracting=!0,this.startInteraction(e.interactions[0].events),e.interactionIcon&&(e.interactionIcon.far=""),this.gameObjects[e.id].hasInteracted=!0)},e.prototype.checkForInteraction=function(){var e=this.gameObjects.miniMe,t=n(e.x,e.y,e.direction),i=Object.values(this.gameObjects).find((function(e){var i=e.x+e.collisionOffset.width,n=i+e.objectWidth-16,a=e.y+e.collisionOffset.height,o=a+e.objectHeight-16;return t.x>=i&&t.x<=n&&t.y>=a&&t.y<=o}));return i&&i.interactions&&i.interactions.length?i:null},e.prototype.startInteraction=function(e){return t=this,i=void 0,a=function(){var t,i=this;return function(e,t){var i,n,a,o,s={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return o={next:r(0),throw:r(1),return:r(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function r(o){return function(r){return function(o){if(i)throw new TypeError("Generator is already executing.");for(;s;)try{if(i=1,n&&(a=2&o[0]?n.return:o[0]?n.throw||((a=n.return)&&a.call(n),0):n.next)&&!(a=a.call(n,o[1])).done)return a;switch(n=0,a&&(o=[2&o[0],a.value]),o[0]){case 0:case 1:a=o;break;case 4:return s.label++,{value:o[1],done:!1};case 5:s.label++,n=o[1],o=[0];continue;case 7:o=s.ops.pop(),s.trys.pop();continue;default:if(!((a=(a=s.trys).length>0&&a[a.length-1])||6!==o[0]&&2!==o[0])){s=0;continue}if(3===o[0]&&(!a||o[1]>a[0]&&o[1]<a[3])){s.label=o[1];break}if(6===o[0]&&s.label<a[1]){s.label=a[1],a=o;break}if(a&&s.label<a[2]){s.label=a[2],s.ops.push(o);break}a[2]&&s.ops.pop(),s.trys.pop();continue}o=t.call(e,s)}catch(e){o=[6,e],n=0}finally{i=a=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,r])}}}(this,(function(n){switch(n.label){case 0:if(!e)return[3,5];this.isInteracting=!0,t=0,n.label=1;case 1:return t<e.length?[4,new p({event:e[t],map:this}).init()]:[3,4];case 2:n.sent(),n.label=3;case 3:return t++,[3,1];case 4:this.isInteracting=!1,Object.values(this.gameObjects).forEach((function(e){return e.doBehavior(i)})),n.label=5;case 5:return[2]}}))},new((n=void 0)||(n=Promise))((function(e,o){function s(e){try{h(a.next(e))}catch(e){o(e)}}function r(e){try{h(a.throw(e))}catch(e){o(e)}}function h(t){var i;t.done?e(t.value):(i=t.value,i instanceof n?i:new n((function(e){e(i)}))).then(s,r)}h((a=a.apply(t,i||[])).next())}));var t,i,n,a},e.prototype.checkForDoors=function(){if(this.doors){var e=this.doors["".concat(this.gameObjects.miniMe.x,",").concat(this.gameObjects.miniMe.y)];e?this.gameObjects[e].door.open():Object.values(this.gameObjects).forEach((function(e){return e.door&&e.door.close()}))}},e}();const l=m;var w=function(e,t){var i=new CustomEvent(e,{detail:t});document.dispatchEvent(i)};const u={"idle-down":[[0,0]],"idle-left":[[0,0]],"idle-right":[[0,0]],"idle-up":[[0,0]],"walk-down":[[0,0]],"walk-left":[[0,0]],"walk-right":[[0,0]],"walk-up":[[0,0]]};var y=function(){function e(e,t){var i=this;this._gameObject=e,this._image=new Image,this._image.src=t.src,this._gameObject.interactionIcon&&(this._interactionImages={},this._interactionImages.far=new Image,this._interactionImages.nearby=new Image,this._interactionImages.far.src=e.interactionIcon.far||e.interactionIcon.nearby,this._interactionImages.nearby.src=e.interactionIcon.nearby||""),this._image.onload=function(){i._isLoaded=!0},this._width=t.width,this._height=t.height,this._imageWidth=t.imageWidth||t.width,this._imageHeight=t.imageHeight||t.height,this._animations=t.animations||u,this._framesToChange=8,this._verticalMove=0,this._framesToChangeProgress=this._framesToChange,this._currentAnimation="idle-down",this._currentAnimationFrame=0}return Object.defineProperty(e.prototype,"frame",{get:function(){return this._animations[this._currentAnimation][this._currentAnimationFrame]},enumerable:!1,configurable:!0}),e.prototype.updateAnimationProgress=function(){this._framesToChangeProgress>0?this._framesToChangeProgress--:(this._currentAnimationFrame++,this._framesToChangeProgress=this._framesToChange,this._verticalMove=5===this._verticalMove?0:this._verticalMove+1,this._currentAnimationFrame=this._animations[this._currentAnimation][this._currentAnimationFrame]?this._currentAnimationFrame:0)},e.prototype.setAnimation=function(e){this._currentAnimation===e||e.includes("interaction")||(this._currentAnimation=e,this._currentAnimationFrame=0,this._framesToChangeProgress=this._framesToChange)},e.prototype.draw=function(e,i,n){var a=this._gameObject.x+t(window.canvasMultiplier.x)-i.getXView(),o=this._gameObject.y+t(window.canvasMultiplier.y)-i.getYView(),s=this.frame,r=s[0],h=s[1];this._isLoaded&&e.drawImage(this._image,16*r,32*h,this._imageWidth,this._imageHeight,a,o,this._width,this._height),this._isLoaded&&this._interactionImages&&!this._gameObject.hasInteracted&&(this._interactionImages.show=this._interactionImages.far||null,e.drawImage(this._interactionImages.show,0,0,32,32,a+this._gameObject.objectWidth/2-this._interactionImages.show.width/2,o-14+this._verticalMove,32,32)),this._gameObject.label&&(e.font="bold 7px Arial",e.fillStyle="rgb(88, 91, 99)",e.textAlign="center",e.fillText(this._gameObject.label,a+this._gameObject.objectWidth/2,o-2)),this.updateAnimationProgress()},Object.defineProperty(e.prototype,"isLoaded",{get:function(){return this._isLoaded},enumerable:!1,configurable:!0}),e}();const f=y,b=function(){function e(e,t){var i=this;this._gameObject=e,this._image=new Image,this._image.src=t.src,this._image.onload=function(){i._isLoaded=!0},this.offsetX=t.offsetX,this.offsetY=t.offsetY,this.width=t.width,this.height=t.height,this._imageWidth=t.imageWidth||t.width,this._imageHeight=t.imageHeight||t.height,this._framesToChange=4,this._framesToChangeProgress=this._framesToChange,this._currentAnimationFrame=2,this._shouldOpen=!1}return e.prototype.updateAnimationProgress=function(){this._framesToChangeProgress>0?this._framesToChangeProgress--:(this._currentAnimationFrame++,this._framesToChangeProgress=this._framesToChange,this._shouldOpen?this._currentAnimationFrame=this._currentAnimationFrame<=5?this._currentAnimationFrame:5:this._currentAnimationFrame=0)},e.prototype.draw=function(e,i,n){var a=this._gameObject.x+this.offsetX+t(window.canvasMultiplier.x)-i.getXView(),o=this._gameObject.y+this.offsetY+t(window.canvasMultiplier.y)-i.getYView();this._isLoaded&&e.drawImage(this._image,this._currentAnimationFrame*this._imageWidth,0,this._imageWidth,this._imageHeight,a,o,this.width,this.height),this.updateAnimationProgress()},e.prototype.open=function(){this._shouldOpen=!0},e.prototype.close=function(){this._shouldOpen=!1},Object.defineProperty(e.prototype,"isLoaded",{get:function(){return this._isLoaded},enumerable:!1,configurable:!0}),e}();var v=function(){function e(e){this.OBJECT_WIDTH=64,this.OBJECT_HEIGHT=64,this.SHADOW_WIDTH=32,this.SHADOW_HEIGHT=32,this.isHidden=e.isHidden,this.isMounted=!1,this.isPlayer=e.isPlayer,this.id=null,this.x=e.x||0,this.y=e.y||0,this.objectWidth=e.width||this.OBJECT_WIDTH,this.objectHeight=e.height||this.OBJECT_HEIGHT,this.collisionOffset={width:e.collisionOffset&&e.collisionOffset.width||0,height:e.collisionOffset&&e.collisionOffset.height||0},this.interactionIcon=e.interactionIcon,this.objectSprite=new f(this,e.sprite.object),this._hasShadow=!!e.sprite.shadow,this.shadowSprite=this._hasShadow&&new f(this,e.sprite.shadow),this.door=e.door?new b(this,e.door):null,this.direction="down",this.behaviorLoop=e.behaviorLoop||[],this.behaviorLoopIndex=0,this.walkable=e.walkable||!1,this.interactions=e.interactions,this.label=e.label,this.isCameraView=e.isCameraView,this.hasInteracted=!1}return e.prototype.mount=function(e){var t=this;this.isMounted=!0,e.addSpaceTaken(this.x+this.collisionOffset.width,this.y+this.collisionOffset.height),setTimeout((function(){t.doBehavior(e)}),10)},e.prototype.update=function(e){},e.prototype.doBehavior=function(e){return t=this,i=void 0,a=function(){var t;return function(e,t){var i,n,a,o,s={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return o={next:r(0),throw:r(1),return:r(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function r(o){return function(r){return function(o){if(i)throw new TypeError("Generator is already executing.");for(;s;)try{if(i=1,n&&(a=2&o[0]?n.return:o[0]?n.throw||((a=n.return)&&a.call(n),0):n.next)&&!(a=a.call(n,o[1])).done)return a;switch(n=0,a&&(o=[2&o[0],a.value]),o[0]){case 0:case 1:a=o;break;case 4:return s.label++,{value:o[1],done:!1};case 5:s.label++,n=o[1],o=[0];continue;case 7:o=s.ops.pop(),s.trys.pop();continue;default:if(!((a=(a=s.trys).length>0&&a[a.length-1])||6!==o[0]&&2!==o[0])){s=0;continue}if(3===o[0]&&(!a||o[1]>a[0]&&o[1]<a[3])){s.label=o[1];break}if(6===o[0]&&s.label<a[1]){s.label=a[1],a=o;break}if(a&&s.label<a[2]){s.label=a[2],s.ops.push(o);break}a[2]&&s.ops.pop(),s.trys.pop();continue}o=t.call(e,s)}catch(e){o=[6,e],n=0}finally{i=a=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,r])}}}(this,(function(i){switch(i.label){case 0:return e.isInteracting||0===this.behaviorLoop.length||this.isIdle?[2]:((t=this.behaviorLoop[this.behaviorLoopIndex]).who=this.id,[4,new p({map:e,event:t}).init()]);case 1:return i.sent(),this.behaviorLoopIndex=this.behaviorLoopIndex+1===this.behaviorLoop.length?0:this.behaviorLoopIndex+1,this.doBehavior(e),[2]}}))},new((n=void 0)||(n=Promise))((function(e,o){function s(e){try{h(a.next(e))}catch(e){o(e)}}function r(e){try{h(a.throw(e))}catch(e){o(e)}}function h(t){var i;t.done?e(t.value):(i=t.value,i instanceof n?i:new n((function(e){e(i)}))).then(s,r)}h((a=a.apply(t,i||[])).next())}));var t,i,n,a},e.prototype.interact=function(e){},e.prototype.startBehavior=function(e,t){},e.prototype.drawInteractionBox=function(){},e}();const x=v;var _,j=(_=function(e,t){return _=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i])},_(e,t)},function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function i(){this.constructor=e}_(e,t),e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)}),M=function(e){function t(t){var i,n=e.call(this,t)||this;return n._movingProgressRemaining=0,n._isPlayer=t.isPlayer,n._speedMultiplier=null!==(i=t.speedMultiplier)&&void 0!==i?i:1,n.isInteracting=!0,n.isIdle=!1,n.directionUpdate={up:{axis:"y",change:-n._speedMultiplier},down:{axis:"y",change:n._speedMultiplier},left:{axis:"x",change:-n._speedMultiplier},right:{axis:"x",change:n._speedMultiplier}},n}return j(t,e),t.prototype.update=function(e){this._movingProgressRemaining>0?this.updatePosition():(!e.map.isInteracting&&this._isPlayer&&e.arrow&&this.startBehavior(e,{type:"walk",direction:e.arrow}),this.updateSprite())},t.prototype.startBehavior=function(e,t){var i=this;if(this.direction=t.direction,"walk"===t.type){if(w("CharacterTryWalk",{whoId:this.id}),e.map.isSpaceTaken(this.x,this.y,this.direction))return void(t.retry&&setTimeout((function(){i.startBehavior(e,t)}),100));e.map.moveSpaceTaken(this.x,this.y,this.direction),this._movingProgressRemaining=16,this.updateSprite()}"idle"===t.type&&(this.isIdle=!0,setTimeout((function(){w("CharacterIdleComplete",{whoId:i.id}),i.isIdle=!1}),t.time),this.updateSprite()),"show"===t.type&&(this.isHidden=!1,setTimeout((function(){w("CharacterShowCompleted",{whoId:i.id})}),100),this.updateSprite())},t.prototype.updatePosition=function(){var e=this.directionUpdate[this.direction].axis,t=this.directionUpdate[this.direction].change;this[e]+=t,this._movingProgressRemaining--,0===this._movingProgressRemaining&&w("CharacterWalkComplete",{whoId:this.id})},t.prototype.updateSprite=function(){0===this._movingProgressRemaining?this.objectSprite.setAnimation("idle-".concat(this.direction)):this.objectSprite.setAnimation("walk-".concat(this.direction))},t}(x);const I=M,k={"idle-down":[[19,1],[20,1],[21,1],[22,1],[23,1]],"idle-left":[[13,1],[14,1],[15,1],[16,1],[17,1]],"idle-right":[[0,1],[1,1],[2,1],[3,1],[4,1]],"idle-up":[[6,1],[7,1],[8,1],[9,1],[10,1]],"walk-down":[[18,2],[19,2],[20,2],[21,2],[22,2],[23,2]],"walk-left":[[12,2],[13,2],[14,2],[15,2],[16,2],[17,2]],"walk-right":[[0,2],[1,2],[2,2],[3,2],[4,2],[5,2]],"walk-up":[[6,2],[7,2],[8,2],[9,2],[10,2],[11,2]]};var S,O,C,L,E={lowerImageSrc:"../images/backgrounds/generic.png",upperImageSrc:"../images/backgrounds/generic-upper.png",gameObjects:{miniMe:new I({x:t(9),y:t(11),isPlayer:!0,hasShadow:!0,width:t(1),height:t(1),sprite:{object:{src:"../images/characters/sprite-vasco.png",width:16,height:32,imageWidth:16,imageHeight:32,animations:k},shadow:{src:"../images/characters/shadow.png",width:32,height:32}}}),mirror:new x({x:t(7),y:t(0),hasShadow:!1,width:t(1),height:t(1),sprite:{object:{src:"../images/objects/aniamted_haunted_mirror.png",width:16,height:32,imageWidth:16,imageHeight:32}},interactions:[{events:[{type:"interactionBox",title:"About Me",textLines:["My name is Andrew and I'm currently a Data Science Student.","I've been working for UCR since September 2017 developing components and features for the website but since 2020 I moved to a more techincal team that develops tools to maximize the performance of the website and improves our developers experience"]},{type:"interactionBox",title:"About Me",textLines:["I studied Computer Science at FCUP (Faculdade de Ciências da Universidade do Porto)","I consider myself a creative, dedicated and curious person","I love to travel, surf and meet new people"]}]}],interactionIcon:{far:"../images/objects/interaction.png"}}),table:new x({x:t(5),y:t(1),hasShadow:!1,width:t(2),height:t(1),sprite:{object:{src:"../images/objects/table.png",width:t(2),height:t(2)}}}),couch:new x({x:t(8),y:t(4),hasShadow:!1,width:t(3),height:t(1),sprite:{object:{src:"../images/objects/couch.png",width:t(3),height:t(2)}}})},limits:{xMin:t(9),yMin:t(5),xMax:t(6),yMax:t(9)},actionSpaces:(S={},S[i(0,4)]=[{events:[{type:"changeMap",map:"room"}]}],S[i(0,5)]=[{events:[{type:"changeMap",map:"room"}]}],S[i(9,11)]=[{events:[{type:"changeMap",map:"outside"}]}],S),walls:(O={},O[i(-1,4)]=!0,O)};a({coord:"x",x:0,y:0,n:20,map:E}),a({coord:"y",x:0,y:0,n:11,map:E}),a({coord:"x",x:1,y:6,n:3,map:E}),a({coord:"x",x:5,y:8,n:4,map:E}),a({coord:"x",x:10,y:8,n:4,map:E}),a({coord:"y",x:4,y:1,n:3,map:E}),a({coord:"x",x:0,y:3,n:4,map:E}),a({coord:"y",x:4,y:6,n:6,map:E}),a({coord:"y",x:14,y:1,n:11,map:E}),a({coord:"x",x:5,y:12,n:10,map:E});var T={lowerImageSrc:"../images/backgrounds/room.png",gameObjects:{miniMe:new I({x:t(10),y:t(4),isPlayer:!0,hasShadow:!0,width:t(1),height:t(1),sprite:{object:{src:"../images/characters/sprite-vasco.png",width:16,height:32,imageWidth:16,imageHeight:32,animations:k},shadow:{src:"../images/characters/shadow.png",width:32,height:32,imageWidth:64,imageHeight:64}}}),piano:new x({x:t(7),y:t(1),hasShadow:!1,width:t(2),height:t(1),sprite:{object:{src:"../images/objects/animated_wall_piano_4_32x32.gif",width:t(2),height:t(2),imageWidth:64,imageHeight:64}},interactions:[{events:[{type:"message",text:"I like to play the piano for fun!"}]}],interactionIcon:{far:"../images/objects/interaction.png"}}),trophy:new x({x:t(1),y:t(4),hasShadow:!1,width:t(1),height:t(1),sprite:{object:{src:"../images/objects/trophy.png",width:t(1),height:t(2)}},interactions:[{events:[{type:"message",text:"1st Place in SD Summer of Code 2017"}]}],interactionIcon:{far:"../images/objects/interaction.png"}}),desk:new x({x:t(4),y:t(4),hasShadow:!1,width:t(2),height:t(1),sprite:{object:{src:"../images/objects/desk.png",width:t(2),height:t(2)}}}),bed:new x({x:t(1),y:t(2),hasShadow:!1,width:t(2),height:t(1),sprite:{object:{src:"../images/objects/bed.png",width:t(2),height:t(2)}}})},walls:(C={},C[i(10,3)]=!0,C[i(11,4)]=!0,C),actionSpaces:(L={},L[i(10,4)]=[{events:[{type:"changeMap",map:"house"}]}],L)};a({coord:"x",x:0,y:5,n:11,map:T}),a({coord:"y",x:0,y:0,n:5,map:T}),a({coord:"x",x:0,y:0,n:11,map:T}),a({coord:"y",x:9,y:0,n:4,map:T});const P={"idle-down":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[5,0],[10,0],[15,0],[20,0],[25,0],[30,0],[35,0],[40,0],[40,0],[40,0],[40,0],[40,0],[40,0],[40,0],[40,0],[40,0],[40,0],[40,0],[40,0],[40,0],[40,0],[40,0],[45,0],[50,0],[55,0],[60,0],[65,0],[70,0],[75,0]]},H={"idle-down":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[6,0],[12,0],[18,0],[24,0],[30,0],[36,0],[42,0],[48,0],[48,0],[48,0],[48,0],[48,0],[48,0],[48,0],[48,0],[54,0],[60,0],[66,0],[72,0],[78,0],[84,0],[90,0]]};var W,A,F,B={lowerImageSrc:"../images/backgrounds/exterior.png",gameObjects:{miniMe:new I({x:t(26),y:t(24),isPlayer:!0,hasShadow:!0,width:t(1),height:t(1),sprite:{object:{src:"../images/characters/sprite-vasco.png",width:16,height:32,imageWidth:16,imageHeight:32,animations:k},shadow:{src:"../images/characters/shadow.png",width:32,height:32,imageWidth:64,imageHeight:64}},isHidden:!0}),car:new I({x:t(10),y:t(24),isPlayer:!1,hasShadow:!0,width:t(1),height:t(2),sprite:{object:{src:"../images/characters/car.png",width:t(4),height:t(3),animations:{"idle-down":[[0,.5]],"idle-left":[[0,0]],"idle-right":[[0,.5]],"idle-up":[[0,0]],"walk-down":[[0,0]],"walk-left":[[0,0]],"walk-right":[[1,2],[6,2],[11,2],[16,2],[21,2]],"walk-up":[[0,0]]}}},isCameraView:!0,speedMultiplier:2}),house:new x({x:t(48),y:t(3),hasShadow:!1,width:t(4),height:t(4),sprite:{object:{src:"../images/objects/house.png",width:t(4),height:t(5),imageWidth:128,imageHeight:160}},door:{offsetX:t(2),offsetY:t(3),src:"../images/doors/door-house.png",width:t(1),height:t(2)}}),techSkillsMuseum:new x({x:t(28),y:t(12),hasShadow:!1,width:t(8),height:t(5),sprite:{object:{src:"../images/objects/museum2.png",width:t(8),height:t(6)}},door:{offsetX:t(0),offsetY:t(4),src:"../images/doors/door-techskills.png",width:t(3),height:t(2)}}),techskillsBillboard:new x({x:t(31),y:t(12.5),hasShadow:!1,width:t(5),height:t(1),sprite:{object:{src:"../images/objects/techskills-billboard.png",width:t(5),height:t(3),animations:{"idle-down":[[0,0],[5,0],[10,0],[15,0],[20,0],[25,0],[30,0]]}}}}),signEduExp:new x({x:t(28),y:t(20),hasShadow:!1,width:t(3),height:t(2),sprite:{object:{src:"../images/objects/sign-outside.png",width:t(3),height:t(3)}}}),college:new x({x:t(27),y:t(-1),hasShadow:!1,width:t(12),height:t(9),sprite:{object:{src:"../images/objects/college.png",width:t(13),height:t(13),imageWidth:t(13),imageHeight:t(13)}}}),signCollege:new x({x:t(29.5),y:t(4),hasShadow:!1,width:t(1),height:t(1),sprite:{object:{src:"../images/objects/sign-college.png",width:t(8),height:t(3)}}}),professor:new I({x:t(33),y:t(8),isPlayer:!1,hasShadow:!0,width:t(1),height:t(1),sprite:{object:{src:"../images/characters/professor.png",width:16,height:32,imageWidth:16,imageHeight:32,animations:k},shadow:{src:"../images/characters/shadow.png",width:32,height:32,imageWidth:64,imageHeight:64}},interactions:[{events:[{type:"message",text:"Professor: Hi Vasco, you're back! I kept your University Degree around. Let me see..."},{type:"message",text:"Professor: There you go!"},{type:"interactionBox",title:"Computer Science Degree",textLines:["- Algorithms and Data Scructures","- Computers Architecture","- Logical Programming","- Databases","- Algorithms Complexity","- Web Technologies","- Functional Programming","- Unix based systems"]}]}],interactionIcon:{far:"../images/objects/interaction.png"}}),farfetchBillboard:new x({x:t(17),y:t(13.5),hasShadow:!1,width:t(6),height:t(1),sprite:{object:{src:"../images/objects/farfetch-billboard.png",width:t(6),height:t(2),animations:H}}}),farfetch:new x({x:t(17),y:t(11),hasShadow:!1,width:t(6),height:t(8),collisionOffset:{width:0,height:t(1)},sprite:{object:{src:"../images/objects/farfetch.png",width:96,height:176}},door:{offsetX:t(2),offsetY:t(8.5),width:t(2),height:t(2),src:"../images/doors/door-building.png"}}),farfetchInfo:new x({x:t(23),y:t(19),hasShadow:!1,width:t(1),height:t(1),sprite:{object:{src:"../images/objects/information.png",width:16,height:32}},interactionIcon:{far:"../images/objects/interaction.png"},interactions:[{events:[{type:"interactionBox",title:"Farfetch (Sep 2017 - Present)",textLines:["I have been working as a Front-End Developer for Farfetch since 2017. My daily routine involves using Javascript/Typescript, NodeJS, React and Docker to develop and maintain the website. ","In 2020, I moved to a more technical team where we focus on improving the development experience for other front-end contributors to farfetch.com."]},{type:"interactionBox",title:"Farfetch (Sep 2017 - Present)",textLines:["In addition to this, I also contribute to the Front-End architecture of Farfetch.","This has allowed me to expand my technical skills and have a greater impact on the overall development process at the company. I take pride in being able to play a part in shaping the direction of our codebase."]},{type:"interactionBox",title:"Farfetch (Sep 2017 - Present)",textLines:["I am excited to be a part of this team and contribute to the growth and success of Farfetch."]}]}]}),dotlogicBillboard:new x({x:t(9),y:t(14.5),hasShadow:!1,width:t(6),height:t(1),sprite:{object:{src:"../images/objects/dotlogic-billboard.png",width:t(6),height:t(2),animations:H}}}),dotlogic:new x({x:t(9),y:t(12),hasShadow:!1,width:t(6),height:t(6),collisionOffset:{width:0,height:t(1)},sprite:{object:{src:"../images/objects/dotlogic.png",width:96,height:144}},door:{offsetX:t(2),offsetY:t(6.5),src:"../images/doors/door-building.png",width:t(2),height:t(2)}}),dotlogicInfo:new x({x:t(15),y:t(18),hasShadow:!1,width:t(1),height:t(1),sprite:{object:{src:"../images/objects/information.png",width:16,height:32}},interactionIcon:{far:"../images/objects/interaction.png"},interactions:[{events:[{type:"interactionBox",title:"DotLogic (Sep 2016 - Sep 2017)",textLines:["At Dotlogic, I worked as a developer for a year in 2016. The company specializes in developing medical software for hospitals, with a focus on cardiology.","I began my time at Dotlogic as a professional intern, where I had the opportunity to create a tool using Javascript and Canvas to read and display ECG data on the page"]},{type:"interactionBox",title:"DotLogic (Sep 2016 - Sep 2017)",textLines:["After my internship, I was offered a full-time position at the company and continued to help improve various web tools.","Working at Dotlogic provided me with valuable experience in the healthcare industry and solidified my skills in Javascript and web development."]}]}]}),blip:new x({x:t(1),y:t(11),hasShadow:!1,width:t(6),height:t(8),collisionOffset:{width:0,height:t(1)},sprite:{object:{src:"../images/objects/blip2.png",width:96,height:176}},door:{offsetX:t(2),offsetY:t(8.5),src:"../images/doors/door-building.png",width:t(2),height:t(2)}}),blipInfo:new x({x:t(7),y:t(19),hasShadow:!1,width:t(1),height:t(1),sprite:{object:{src:"../images/objects/information.png",width:16,height:32}},interactionIcon:{far:"../images/objects/interaction.png"},interactions:[{events:[{type:"interactionBox",title:"Blip (Summer internship - 3 months)",textLines:["During my 3 months summer internship at Blip, I had the opportunity to work on a project to dynamically structure the front-end community documentation using JSDoc3","This project allowed me to get some knowledge on Front End tools while working with Scrum for the first time"]}]}]}),softSkills:new x({x:t(7),y:t(0),hasShadow:!1,width:t(6),height:t(9),sprite:{object:{src:"../images/objects/soft-skills.png",width:96,height:160}},door:{offsetX:t(0),offsetY:t(8),src:"../images/doors/door-softskills.png",width:t(3),height:t(2)}}),socialBillboard:new x({x:t(16),y:t(3),hasShadow:!1,width:t(5),height:t(5),sprite:{object:{src:"../images/objects/billboard-social.png",width:t(5),height:t(6),animations:P}},interactions:[{events:[{type:"message",text:"https://github.com/vascofbribeiro",isLink:!0},{type:"message",text:"https://www.linkedin.com/in/vascof-ribeiro/",isLink:!0}]}]}),awardsBillboard:new x({x:t(40),y:t(12),hasShadow:!1,width:t(5),height:t(4),sprite:{object:{src:"../images/objects/billboard-awards.png",width:t(5),height:t(6),animations:P}},collisionOffset:{width:0,height:t(1)},interactionIcon:{far:"../images/objects/interaction.png"},interactions:[{events:[{type:"message",text:'Winner in the category "Fun" at Make Or Break 2017 (Porto Summer Of Code) - 3 days hackathon'},{type:"message",text:"Our team created an application to rate public restrooms using sensors to detect if toilet paper is available"},{type:"message",text:"https://medium.com/makeorbreak-io/make-or-break-more-than-a-hackathon-45d43c0042ba",isLink:!0}]}]}),signAndroid:new x({x:t(47),y:t(15),hasShadow:!1,width:t(1),height:t(2),sprite:{object:{src:"../images/objects/sign-android.png",width:t(1),height:t(3)}},interactionIcon:{far:"../images/objects/interaction.png"},interactions:[{events:[{type:"interactionBox",title:"Android Development Course",textLines:["In 2014 I applied to a 2 week Android course in Yekaterinburg with BEST - Board of European Students","I ended up being chosen to participate and the aim of the course was to give students good knowledge of Android architecture and programming"]}]}]}),campervan:new x({x:t(42),y:t(19),hasShadow:!1,width:t(6),height:t(1),collisionOffset:{height:t(1),width:0},sprite:{object:{src:"../images/objects/campervan.png",width:t(6),height:t(4)}},interactions:[{events:[{type:"message",text:"I love to travel and discover new places 🌍"}]}]}),thinkGlobe:new x({x:t(45),y:t(19),hasShadow:!1,width:t(1),height:t(1),sprite:{object:{src:"../images/interfaces/globe.png",width:t(1),height:t(2),animations:{"idle-down":[[0,0],[1,0],[2,0],[3,0],[4,0],[5,0],[5,0],[5,0],[5,0],[5,0],[5,0],[5,0],[5,0],[5,0],[5,0],[5,0],[5,0],[5,0]]}}}}),volunteer:new x({x:t(41),y:t(4),hasShadow:!1,width:t(4),height:t(3),collisionOffset:{height:t(1),width:0},sprite:{object:{src:"../images/objects/volunteer.png",width:t(4),height:t(5)}},interactionIcon:{far:"../images/objects/interaction.png"},interactions:[{events:[{type:"interactionBox",title:"ESN Porto (2015-2018)",textLines:["As a volunteer for ESN - Erasmus Student Network I was responsible for integrating ERASMUS students into the city of Porto.","This was accomplished by organizing trips and activities in partnership with several companies and instituions"]},{type:"interactionBox",title:"ESN Porto (2015-2018)",textLines:["My work helped to create a welcoming and inclusive environment for international students, and allowed them to fully experience and enjoy their time in Porto"]}]}]}),fountain:new x({x:t(35),y:t(20),hasShadow:!1,width:t(2),height:t(2),sprite:{object:{src:"../images/objects/fountain.png",width:t(2),height:t(3),animations:{"idle-down":[[0,0],[2,0],[4,0],[6,0],[8,0],[10,0],[12,0],[14,0]]}}}}),tree1:new x({x:t(32),y:t(20),hasShadow:!1,width:t(2),height:t(2),sprite:{object:{src:"../images/objects/tree.png",width:t(2),height:t(3)}}}),tree2:new x({x:t(38),y:t(20),hasShadow:!1,width:t(2),height:t(2),sprite:{object:{src:"../images/objects/tree.png",width:t(2),height:t(3)}}})},walls:(W={},W[i(26,25)]=!0,W[i(54,17)]=!0,W[i(54,18)]=!0,W),limits:{xMin:t(11),yMin:t(6.5),xMax:t(43),yMax:t(23)},actionSpaces:(A={},A[i(50,6)]=[{events:[{type:"changeMap",map:"house"}]}],A[i(53,17)]=[{events:[{type:"changeMap",map:"basket"}]}],A[i(53,18)]=[{events:[{type:"changeMap",map:"basket"}]}],A[i(25,-1)]=[{events:[{type:"changeMap",map:"beach"}]}],A[i(26,-1)]=[{events:[{type:"changeMap",map:"beach"}]}],A[i(8,8)]=[{events:[{type:"changeMap",map:"softSkills"}]}],A[i(12,18)]=[{events:[{type:"message",text:"I'm not allowed to enter the building since I don't work here anymore"},{type:"walk",who:"miniMe",direction:"down"}]}],A[i(11,18)]=[{events:[{type:"message",text:"I'm not allowed to enter the building since I don't work here anymore"},{type:"walk",who:"miniMe",direction:"down"}]}],A[i(3,19)]=[{events:[{type:"message",text:"I'm not allowed to enter the building since I don't work here anymore"},{type:"walk",who:"miniMe",direction:"down"}]}],A[i(4,19)]=[{events:[{type:"message",text:"I'm not allowed to enter the building since I don't work here anymore"},{type:"walk",who:"miniMe",direction:"down"}]}],A[i(19,19)]=[{events:[{type:"changeMap",map:"farfetch"}]}],A[i(20,19)]=[{events:[{type:"changeMap",map:"farfetch"}]}],A[i(29,16)]=[{events:[{type:"changeMap",map:"techskills"}]}],A),initialInteractions:[{type:"walk",who:"car",direction:"right"},{type:"walk",who:"car",direction:"right"},{type:"walk",who:"car",direction:"right"},{type:"walk",who:"car",direction:"right"},{type:"walk",who:"car",direction:"right"},{type:"walk",who:"car",direction:"right"},{type:"walk",who:"car",direction:"right"},{type:"walk",who:"car",direction:"right"},{type:"idle",who:"car",direction:"down",time:200},{type:"changeCameraView",who:"miniMe"},{type:"show",who:"miniMe",direction:"down"},{type:"walk",who:"miniMe",direction:"up"},{type:"walk",who:"miniMe",direction:"up"},{type:"walk",who:"miniMe",direction:"up"},{type:"walk",who:"miniMe",direction:"up"},{type:"walk",who:"miniMe",direction:"up"},{type:"idle",who:"miniMe",direction:"down",time:200},{type:"message",text:"Hello! 👋 Welcome to my Portfolio",showNote:!0},{type:"message",text:"My name is Vasco and I'm a Front-end Developer"},{type:"message",text:function(e){return"Feel free to explore the rooms! Use the ".concat(e?"joystick":"arrows"," to walk around and press ").concat(e?"A":"spacebar"," to interact with objects.")}}]};a({coord:"x",x:0,y:3,n:25,map:B}),a({coord:"x",x:27,y:3,n:19,map:B}),a({coord:"y",x:46,y:3,n:6,map:B}),a({coord:"y",x:24,y:-1,n:4,map:B}),a({coord:"x",x:46,y:8,n:3,map:B}),a({coord:"x",x:51,y:8,n:3,map:B}),a({coord:"y",x:0,y:0,n:30,map:B}),a({coord:"y",x:53,y:0,n:30,map:B}),a({coord:"x",x:0,y:25,n:24,map:B}),a({coord:"x",x:26,y:25,n:30,map:B}),a({coord:"x",x:27,y:2,n:26,map:B});var D,V={lowerImageSrc:"../images/backgrounds/museum.png",gameObjects:{miniMe:new I({x:t(6),y:t(16),isPlayer:!0,hasShadow:!0,width:t(1),height:t(1),sprite:{object:{src:"../images/characters/sprite-vasco.png",width:16,height:32,imageWidth:16,imageHeight:32,animations:k},shadow:{src:"../images/characters/shadow.png",width:32,height:32,imageWidth:64,imageHeight:64}}}),avatarJs:new x({x:t(1),y:t(12),hasShadow:!1,width:t(2),height:t(2),sprite:{object:{src:"../images/objects/js-avatar2.png",width:t(2),height:t(3),imageWidth:32,imageHeight:48}},interactions:[{events:[{type:"message",text:"Javascript"}]}],label:"Javascript"}),avatarNode:new x({x:t(4),y:t(12),hasShadow:!1,width:t(2),height:t(2),sprite:{object:{src:"../images/objects/node-avatar2.png",width:t(2),height:t(3),imageWidth:32,imageHeight:48}},interactions:[{events:[{type:"message",text:"NodeJS"}]}],label:"NodeJS"}),avatarGit:new x({x:t(8),y:t(12),hasShadow:!1,width:t(2),height:t(2),sprite:{object:{src:"../images/objects/git-avatar2.png",width:t(2),height:t(3),imageWidth:32,imageHeight:48}},interactions:[{events:[{type:"message",text:"Git - Version Control System"}]}],label:"Git"}),avatarDocker:new x({x:t(11),y:t(12),hasShadow:!1,width:t(2),height:t(2),sprite:{object:{src:"../images/objects/docker-avatar.png",width:t(2),height:t(3),imageWidth:32,imageHeight:48}},interactions:[{events:[{type:"message",text:"Docker"}]}],label:"Docker"}),avatarReact:new x({x:t(1),y:t(6),hasShadow:!1,width:t(2),height:t(2),sprite:{object:{src:"../images/objects/react-avatar.png",width:t(2),height:t(3),imageWidth:32,imageHeight:48}},interactions:[{events:[{type:"message",text:"React"}]}],label:"React"}),avatarDevtools:new x({x:t(4),y:t(6),hasShadow:!1,width:t(2),height:t(2),sprite:{object:{src:"../images/objects/chromedev-avatar.png",width:t(2),height:t(3),imageWidth:32,imageHeight:48}},interactions:[{events:[{type:"message",text:"Chrome DevTools"}]}],label:"Dev Tools"}),avatarCss:new x({x:t(8),y:t(6),hasShadow:!1,width:t(2),height:t(2),sprite:{object:{src:"../images/objects/css-avatar.png",width:t(2),height:t(3),imageWidth:32,imageHeight:48}},interactions:[{events:[{type:"message",text:"CSS"}]}],label:"CSS"}),avatarTypescript:new x({x:t(11),y:t(6),hasShadow:!1,width:t(2),height:t(2),sprite:{object:{src:"../images/objects/typescript-avatar.png",width:t(2),height:t(3),imageWidth:32,imageHeight:48}},interactions:[{events:[{type:"message",text:"Typescript"}]}],label:"Typescript"}),avatarWebpack:new x({x:t(2),y:t(0),hasShadow:!1,width:t(2),height:t(2),sprite:{object:{src:"../images/objects/webpack-avatar.png",width:t(2),height:t(3),imageWidth:32,imageHeight:48}},interactions:[{events:[{type:"message",text:"Webpack"}]}],label:"Webpack"}),avatarJest:new x({x:t(6),y:t(0),hasShadow:!1,width:t(2),height:t(2),sprite:{object:{src:"../images/objects/jest-avatar.png",width:t(2),height:t(3),imageWidth:32,imageHeight:48}},interactions:[{events:[{type:"message",text:"Jest - Unit Tests"}]}],label:"Jest"}),avatarPerformance:new x({x:t(10),y:t(0),hasShadow:!1,width:t(2),height:t(2),sprite:{object:{src:"../images/objects/performance-avatar.png",width:t(2),height:t(3),imageWidth:32,imageHeight:48}},interactions:[{events:[{type:"message",text:"Website Performance"}]}],label:"Performance"})},limits:{xMin:t(6),yMin:t(4),xMax:t(6),yMax:t(12)},walls:{},actionSpaces:(F={},F[i(6,16)]=[{events:[{type:"changeMap",map:"outside"}]}],F[i(7,16)]=[{events:[{type:"changeMap",map:"outside"}]}],F)};a({coord:"y",x:0,y:-1,n:17,map:V}),a({coord:"y",x:13,y:-1,n:17,map:V}),a({coord:"x",x:0,y:16,n:13,map:V}),a({coord:"x",x:0,y:17,n:13,map:V}),a({coord:"x",x:0,y:1,n:13,map:V}),a({coord:"x",x:1,y:5,n:5,map:V}),a({coord:"x",x:8,y:5,n:5,map:V}),a({coord:"x",x:1,y:7,n:5,map:V}),a({coord:"x",x:8,y:7,n:5,map:V}),a({coord:"x",x:1,y:11,n:5,map:V}),a({coord:"x",x:8,y:11,n:5,map:V}),a({coord:"x",x:1,y:13,n:5,map:V}),a({coord:"x",x:8,y:13,n:5,map:V});var X={lowerImageSrc:"../images/backgrounds/basket.png",gameObjects:{miniMe:new I({x:t(0),y:t(3),isPlayer:!0,hasShadow:!0,width:t(1),height:t(1),sprite:{object:{src:"../images/characters/sprite-vasco.png",width:16,height:32,imageWidth:16,imageHeight:32,animations:k},shadow:{src:"../images/characters/shadow.png",width:32,height:32,imageWidth:64,imageHeight:64}}}),baskethoop:new x({x:t(5),y:t(-1),hasShadow:!1,width:t(2),height:t(3),sprite:{object:{src:"../images/objects/hoop.png",width:t(2),height:t(3),imageWidth:48,imageHeight:64}}})},walls:{},actionSpaces:(D={},D[i(0,3)]=[{events:[{type:"changeMap",map:"outside"}]}],D),initialInteractions:[{type:"walk",who:"miniMe",direction:"right"},{type:"message",text:"I played basketball for 6 years"},{type:"walk",who:"miniMe",direction:"left"}],keepInitialInteractions:!0};var J,R,Y={lowerImageSrc:"../images/backgrounds/beach.png",gameObjects:{miniMe:new I({x:t(13),y:t(13),isPlayer:!0,hasShadow:!0,width:t(1),height:t(1),sprite:{object:{src:"../images/characters/sprite-vasco.png",width:16,height:32,imageWidth:16,imageHeight:32,animations:k},shadow:{src:"../images/characters/shadow.png",width:32,height:32,imageWidth:64,imageHeight:64}}}),boat:new x({x:t(17),y:t(3),width:t(5),height:t(2),sprite:{object:{src:"../images/objects/boat.png",width:t(5),height:t(2),animations:{"idle-down":[[0,0],[5,0],[10,0],[15,0],[20,0],[25,0],[30,0],[35,0]]}}}}),chair:new x({x:t(7),y:t(8),width:t(2),height:t(1),sprite:{object:{src:"../images/objects/beach-chair.png",width:t(2),height:t(2)}}}),umbrella:new x({x:t(5),y:t(6),width:t(3),height:t(2),collisionOffset:{width:0,height:t(1)},sprite:{object:{src:"../images/objects/beach-umbrella.png",width:t(3),height:t(4)}}}),surfboard:new x({x:t(16),y:t(8),width:t(1),height:t(1),sprite:{object:{src:"../images/objects/surfboard.png",width:t(1),height:t(2)}},interactionIcon:{far:"../images/objects/interaction.png"},interactions:[{events:[{type:"message",text:"I finally found my surfboard! I love to surf 🏄"}]}]})},limits:{xMin:t(11),yMin:t(6),xMax:t(11),yMax:t(8)},walls:(J={},J[i(12,12)]=!0,J[i(14,12)]=!0,J[i(12,13)]=!0,J[i(14,13)]=!0,J),actionSpaces:(R={},R[i(13,13)]=[{events:[{type:"changeMap",map:"outside"}]}],R)};a({coord:"y",x:0,y:-1,n:15,map:Y}),a({coord:"y",x:22,y:-1,n:15,map:Y}),a({coord:"x",x:0,y:5,n:22,map:Y}),a({coord:"x",x:0,y:11,n:13,map:Y}),a({coord:"x",x:14,y:11,n:8,map:Y}),a({coord:"x",x:0,y:14,n:22,map:Y});var N,U,G={lowerImageSrc:"../images/backgrounds/soft-skills.png",gameObjects:{miniMe:new I({x:t(5),y:t(8),isPlayer:!0,hasShadow:!0,width:t(1),height:t(1),sprite:{object:{src:"../images/characters/sprite-vasco.png",width:16,height:32,imageWidth:16,imageHeight:32,animations:k},shadow:{src:"../images/characters/shadow.png",width:32,height:32,imageWidth:64,imageHeight:64}}}),altar:new x({x:t(5),y:t(5),width:t(1),height:t(1),sprite:{object:{src:"../images/objects/altar.png",width:16,height:32,imageWidth:16,imageHeight:32}},interactions:[{events:[{type:"interactionBox",title:"Soft Skills",textLines:["- Creative","- Problem solver","- Teamwork","- Adaptability","- Curiosity"]}]}],interactionIcon:{far:"../images/objects/interaction.png"}}),statues:new x({x:t(1.5),y:t(1),width:t(1),height:t(1),sprite:{object:{src:"../images/objects/statues.png",width:t(8),height:t(3),animations:{"idle-down":[[0,0],[8,0],[16,0],[24,0]]}}}})},limits:{xMin:80,yMin:64,xMax:80,yMax:96},walls:{},actionSpaces:(N={},N[i(5,8)]=[{events:[{type:"changeMap",map:"outside"}]}],N)};a({coord:"x",x:0,y:4,n:10,map:G}),a({coord:"y",x:0,y:-1,n:10,map:G}),a({coord:"x",x:0,y:8,n:10,map:G}),a({coord:"x",x:0,y:9,n:10,map:G}),a({coord:"y",x:10,y:-1,n:10,map:G});var q={lowerImageSrc:"../images/backgrounds/work.png",gameObjects:{miniMe:new I({x:t(6),y:t(8),isPlayer:!0,hasShadow:!0,width:t(1),height:t(1),sprite:{object:{src:"../images/characters/sprite-vasco.png",width:16,height:32,imageWidth:16,imageHeight:32,animations:k},shadow:{src:"../images/characters/shadow.png",width:32,height:32,imageWidth:64,imageHeight:64}}}),desks1:new x({x:t(1),y:t(3),hasShadow:!0,width:t(6),height:t(3),sprite:{object:{src:"../images/objects/work-desks.png",width:t(6),height:t(4)}}}),receptionist:new x({x:t(8),y:t(7),hasShadow:!0,width:t(3),height:t(1),sprite:{object:{src:"../images/objects/receptionist.png",width:t(3),height:t(2)}}})},walls:{},actionSpaces:(U={},U[i(6,8)]=[{events:[{type:"changeMap",map:"outside"}]}],U[i(5,8)]=[{events:[{type:"changeMap",map:"outside"}]}],U)};a({coord:"x",x:0,y:1,n:11,map:q}),a({coord:"y",x:0,y:0,n:8,map:q}),a({coord:"x",x:0,y:8,n:11,map:q}),a({coord:"x",x:0,y:9,n:11,map:q}),a({coord:"y",x:11,y:1,n:8,map:q});var z={house:E,room:T,outside:B,techskills:V,basket:X,beach:Y,softSkills:G,farfetch:q},K={1056:3,960:3,752:4},Q={1056:{x:11,y:6},960:{x:9,y:6},752:{x:6,y:9}},Z={1056:{xMin:0,yMin:0,xMax:0,yMax:0},960:{xMin:-2,yMin:0,xMax:0,yMax:0},752:{xMin:-5,yMin:3,xMax:-5,yMax:4}};const $=function(){function e(){this.gameObject=null,this.limits=null,this.LIMITS_OFFSET={xMin:0,yMin:0,xMax:0,yMax:0}}return e.prototype.setObject=function(e){this.gameObject=e},e.prototype.setLimits=function(e){if(e){var t=e.xMin+this.LIMITS_OFFSET.xMin,i=e.yMin+this.LIMITS_OFFSET.yMin,n=e.xMax-this.LIMITS_OFFSET.xMax,a=e.yMax-this.LIMITS_OFFSET.yMax;this.limits={xMin:t>n?n:t,yMin:i>a?a:i,xMax:n,yMax:a}}else this.limits=null},e.prototype.getXView=function(){return this.limits?this.gameObject.x<this.limits.xMin?this.limits.xMin:this.gameObject.x>this.limits.xMax?this.limits.xMax:this.gameObject.x:this.gameObject.x},e.prototype.getYView=function(){return this.limits?this.gameObject.y<this.limits.yMin?this.limits.yMin:this.gameObject.y>this.limits.yMax?this.limits.yMax:this.gameObject.y:this.gameObject.y},e.prototype.setLimitsOffset=function(e){this.LIMITS_OFFSET={xMin:t(Z[e].xMin),yMin:t(Z[e].yMin),xMax:t(Z[e].xMax),yMax:t(Z[e].yMax)}},e}();new(function(){function t(e){var t=this,i=document.getElementById("canvas-container");window.isMobile=i.clientWidth<=991,window.mapsConfig=z,this._maps={},this._cameraView=new $,this._canvas=document.getElementById(e),this._gameContainer=document.getElementById("canvas-container"),this._helper=document.getElementById("helper"),this._helperText=document.getElementById("helper-text"),this.resizeCanvas(),addEventListener("resize",(function(){return t.resizeCanvas()})),this._ctx=this._canvas.getContext("2d")}return t.prototype.startGameLoop=function(){var e,t=this,i=1e3/70,n=Date.now(),a=function(){if(t._activeMap.isImageLoaded){var o=(e=Date.now())-n;o>=i&&(n=e-o%i,t._ctx.clearRect(0,0,t._canvas.width,t._canvas.height),Object.values(t._activeMap.gameObjects).forEach((function(e){e.update({arrow:t._directionInput.direction,map:t._activeMap})})),t._activeMap.drawLowerImage(t._ctx,t._cameraView),Object.values(t._activeMap.gameObjects).sort((function(e,t){return e.y-t.y})).forEach((function(e){!e.isHidden&&e.objectSprite.draw(t._ctx,t._cameraView,t._activeMap.gameObjects.miniMe),e.door&&e.door.draw(t._ctx,t._cameraView,t._activeMap.gameObjects.miniMe)})),t._activeMap.drawUpperImage(t._ctx,t._cameraView))}requestAnimationFrame((function(){a()}))};a()},t.prototype.bindAction=function(){var e=this;new o((function(){!e._activeMap.isInteracting&&e._activeMap.tryInteraction(),e._hideHelper()}))},t.prototype.bindCheckCharacterPosition=function(){var e=this;document.addEventListener("CharacterWalkComplete",(function(t){var i=t.detail.whoId;!e._activeMap.isInteracting&&e._activeMap.checkForInteraction()?e._showHelper():e._hideHelper(),"miniMe"===i&&(e._activeMap.checkActionForPosition(),e._activeMap.checkForDoors())})),document.addEventListener("CharacterTryWalk",(function(){!e._activeMap.isInteracting&&e._activeMap.checkForInteraction()?e._showHelper():e._hideHelper()}))},t.prototype.startMap=function(e){this._activeMap=this._maps[e]||new l(window.mapsConfig[e]),this._activeMap.engine=this,this._activeMap.mountObjects();var t=Object.values(this._activeMap.gameObjects).find((function(e){return e.isCameraView}))||this._activeMap.gameObjects.miniMe;this.setCameraView(t),this._activeMap.startInteraction(this._activeMap.initialInteractions),this._activeMap.keepInitialInteractions||(this._activeMap.initialInteractions=[])},t.prototype.loadAllMaps=function(){var e=this;Object.keys(window.mapsConfig).forEach((function(t){e._maps[t]=new l(window.mapsConfig[t]),e._maps}))},t.prototype.setCameraView=function(e){this._cameraView.setObject(e),e.isCameraView=!1,this._cameraView.setLimits(this._activeMap.limits)},t.prototype.init=function(){var t=this;this.loadAllMaps(),document.addEventListener("mapImageLoaded",(function(){var i=Object.values(t._maps).filter((function(e){return e.isImageLoaded})).length,n=Object.keys(t._maps).length,a=i/n*100;document.getElementById("progress").style.width="".concat(a,"%"),i===n&&(document.getElementById("loading").style.display="none",t.startMap("outside"),t.bindAction(),t.bindCheckCharacterPosition(),t._directionInput=new e,t._directionInput.init(),t.startGameLoop())}))},t.prototype.resizeCanvas=function(){var e=window.devicePixelRatio||1,t=K[this._gameContainer.clientWidth],i=this._canvas.getContext("2d");this._canvas.width=this._gameContainer.clientWidth*e,this._canvas.height=this._gameContainer.clientHeight*e,this._canvas.style.width="".concat(this._gameContainer.clientWidth,"px"),this._canvas.style.height="".concat(this._gameContainer.clientHeight,"px"),i.imageSmoothingEnabled=!1,i.scale(e*t,e*t),window.canvasMultiplier=Q[this._gameContainer.clientWidth],window.isMobile=this._gameContainer.clientWidth<=991,this._helperText.textContent="Press ".concat(window.isMobile?"A":"spacebar"," to interact"),this._cameraView.setLimitsOffset(this._gameContainer.clientWidth),this._activeMap&&this._cameraView.setLimits(this._activeMap.limits)},t.prototype._showHelper=function(){this._helper.style.display="block"},t.prototype._hideHelper=function(){this._helper.style.display="none"},t}())("game-canvas").init()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,